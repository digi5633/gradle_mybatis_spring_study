<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gradle_mybatis_spring_study.mapper.CourseMapper">

	<resultMap type="Course" id="CourseResult">
		<id property="courseId" column="course_id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>	
	</resultMap>
	
	<!-- 동적 SQL - if 조건 -->
	<sql id="selectSql">
		SELECT COURSE_ID, NAME, DESCRIPTION, START_DATE, END_DATE, TUTOR_ID FROM COURSES
	</sql>
	
	<sql id="whereSqlWithCDATA">
		<where>
			<if test="tutorId != null">
				<![CDATA[ and tutor_id = #{tutorId} ]]>
			</if>
			<if test="courseName != null">
				<![CDATA[ and name like #{courseName} ]]>
			</if>
			<if test="startDate != null">
				<![CDATA[ and start_date >= #{startDate} ]]>
			</if>
			<if test="endDate != null">
				<![CDATA[ and end_date <= #{endDate} ]]>
			</if>
		</where>
	</sql>
	
	<select id="selectCoursesByCondition" parameterType="map" resultMap="CourseResult">
		<include refid="selectSql"/>
		<include refid="whereSqlWithCDATA"/>
	</select>
	
	<!-- 동적 SQL - choose 조건 -->
	<select id="selectCaseCourses" parameterType="map" resultMap="CourseResult">
		<include refid="selectSql"/>
		<choose>
			<when test="searchBy == 'Tutor'">
				WHERE TUTOR_ID = #{tutorId}
			</when>
			<when test="searchBy == 'CourseName'">
				WHERE NAME LIKE #{courseName}
			</when>
			<otherwise>
				WHERE END_DATE = now()
			</otherwise>
		</choose>
	</select>
	
	<!-- 동적 SQL - where 조건 -->
	<select id="selectWhereCourses" parameterType="map" resultMap="CourseResult">
		<include refid="selectSql"/>
		<include refid="whereSqlWithCDATA"/>
	</select>
	
	<!-- 동적 SQL - trim 조건 -->
	<select id="selectTrimCourses" parameterType="map" resultMap="CourseResult">
		<include refid="selectSql"/>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<!-- 아래 tutorId != null 조건이 참이면 앞부분에 where 자동 추가 -->
			<if test="totorId != null">
				TUTOR_ID = #{tutorId}
			</if>
			<!-- 만약 where가 추가 된 경우 and 절 추가, where 존재하지 않는 경우 where 추가하고 and 제거 -->
			<if test="courseName != null">
				AND NAME LIKE #{courseName}
			</if>
		</trim>
	</select>
	
	<!-- 동적 SQL - foreach 루프 -->
	<select id="selectCoursesForeachByTutors" parameterType="map" resultMap="CourseResult">
		<include refid="selectSql"/>
		<if test="tutorIds != null">
			<where>
				TUTOR_ID IN
				<foreach collection="tutorIds" item="tutorId" index="index" open="(" close=")" separator=",">
					#{tutorId}				
				</foreach>
			</where>
		</if>
	</select>
	
	<!-- foreach 루프 - insert -->
	<insert id="insertCourses" parameterType="map">
		INSERT ALL
		<foreach item="item" collection="tutors" index="index">
			INTO COURSES VALUES
			(#{item.courseId}, #{item.name}, #{item.description}, #{item.startDate}, #{item.endDate}, #{item.tutorId})
		</foreach>
		SELECT 1 FROM DUAL
	</insert>
	
	<!-- foreach 루프 - delete -->
	<delete id="deleteCourses" parameterType="map">
		DELETE FROM COURSES
		<where>
			COURSE_ID IN
			<foreach item="courseId" collection="courseIds" index="index" open="(" close=")" separator=",">
				#{courseId}
			</foreach>
		</where>
	</delete>
	
	<!-- transaction -->
	<insert id="insertCourse" parameterType="Course">
		INSERT INTO COURSES(COURSE_ID, NAME, DESCRIPTION, START_DATE, END_DATE, TUTOR_ID)
		VALUES (#{courseId}, #{name}, #{description}, #{startDate}, #{endDate}, #{tutorId})
	</insert>
	
	<delete id="deleteCourse">
		DELETE
		  FROM COURSES
		 WHERE COURSE_ID = #{courseId}
	</delete>

</mapper>